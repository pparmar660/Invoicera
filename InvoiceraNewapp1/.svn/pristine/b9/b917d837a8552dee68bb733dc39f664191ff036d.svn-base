package com.invoicera.Fragment;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.invoicera.GlobalData.Constant;
import com.invoicera.ViewPagerAdpter.InvoiceCreateAndDetailPagerAdpter;
import com.invoicera.ViewPagerFragment.CreteInvoicePagerFragment;
import com.invoicera.ViewPagerFragment.InformationInvoicePagerFragment;
import com.invoicera.ViewPagerFragment.PreviewInvoicePagerFragment;
import com.invoicera.androidapp.R;

import java.util.List;

public class InvoicePreviewCreateFragment extends BaseFragment implements
        ViewPager.OnPageChangeListener {

    CreteInvoicePagerFragment createFragment;
    PreviewInvoicePagerFragment previewFragment;
    InformationInvoicePagerFragment infromationFragment;

    InvoiceCreateAndDetailPagerAdpter pagerAdpetr;
    Bundle argument;
    ViewPager pager;

    HorizontalScrollView scrollView;
    LinearLayout scrollLiner;
    String content[] = {"Create", "PREVIEW", "INFORMATION"};
    int pagerCurrentPosition = 0;
    public static String invoice_id = "";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater,
                             @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

        View view = inflater.inflate(R.layout.invoice_detail_create_fragment,
                container, false);


        pagerAdpetr = new InvoiceCreateAndDetailPagerAdpter(
                getChildFragmentManager());

        pager = (ViewPager) view.findViewById(R.id.pager);

        // -------------------View Pager
        scrollView = (HorizontalScrollView) view
                .findViewById(R.id.horizontalScroll);
        scrollLiner = (LinearLayout) view.findViewById(R.id.scrollLiner);

        pager.setAdapter(pagerAdpetr);

        // --------
        // Create Fragment------------
        createFragment = new CreteInvoicePagerFragment();
        argument = new Bundle();
        createFragment.setArguments(argument);
        pagerAdpetr.add(createFragment);
        // preview Fragment-------------------------

        previewFragment = new PreviewInvoicePagerFragment();
        argument = new Bundle();
        previewFragment.setArguments(argument);
        pagerAdpetr.add(previewFragment);
        // ---------------------------

        // information Fragment-------------------------

        infromationFragment = new InformationInvoicePagerFragment();
        argument = new Bundle();
        infromationFragment.setArguments(argument);
        pagerAdpetr.add(infromationFragment);
        // ---------------------------
        pager.setOnPageChangeListener(this);

        // ----

        for (int i = 0; i < 3; i++) {
            scrollLiner.addView(addIndicater(i));
        }// ----
        invalidateTabs(0);

        Bundle bundle = getArguments();
        if (bundle != null)
            if (bundle.getString(Constant.KEY_INVOICE_ID) != null) {

                pagerCurrentPosition = bundle.getInt(Constant.KEY_POSITION);
                invoice_id = bundle.getString(Constant.KEY_INVOICE_ID);

                System.out.println("Id2:"+invoice_id);
                pager.setCurrentItem(pagerCurrentPosition);
            }


        return view;

    }

    public View addIndicater(int postion) {

        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View view = inflater.inflate(R.layout.indicater_text, scrollLiner,
                false);
        TextView textView = (TextView) view.findViewById(R.id.indicater_text);

        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(
                global.screenWidth / 3, LinearLayout.LayoutParams.WRAP_CONTENT);

		/*
         * layoutParams.setMargins((int) global.convertDpToPixel(10, context),
		 * (int) global.convertDpToPixel(10, context), (int)
		 * global.convertDpToPixel(10, context), (int)
		 * global.convertDpToPixel(10, context));
		 */// margins as you
        // wish

        textView.setLayoutParams(layoutParams);

        // imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
        // imageView.setImageResource(R.mipmap.ic_launcher);
        textView.setText(content[postion]);
        textView.setTextColor(Color.WHITE);
        view.setTag(postion);
        textView.setTag(postion);
        textView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                try {
                    int position = Integer.parseInt(view.getTag().toString());
                    pager.setCurrentItem(position);
                } catch (NumberFormatException e) {

                    e.getMessage();
                    // TODO: handle exception
                }

            }
        });

        return view;

    }

    @Override
    public void onPageScrollStateChanged(int arg0) {
        // TODO Auto-generated method stub

    }

    @Override
    public void onPageScrolled(int arg0, float arg1, int arg2) {
        // TODO Auto-generated method stub

    }

    @Override
    public void onPageSelected(int arg0) {
        // TODO Auto-generated method stub
        invalidateTabs(arg0);

    }

    private void invalidateTabs(int currentItem) {
        View view;
        int childCount = scrollLiner.getChildCount();
        for (int i = 0; i < childCount; i++) {
            view = scrollLiner.getChildAt(i);
            if (currentItem == Integer.parseInt(view.getTag().toString())) {
                view.setBackground(context.getResources().getDrawable(
                        R.drawable.tab_indicator_invoicelist_back));
                int vLeft = view.getLeft();
                int vRight = view.getRight();
                int sWidth = scrollView.getWidth();
                scrollView.smoothScrollTo(((vLeft + vRight - sWidth) / 2), 0);
            } else {
                view.setBackgroundColor(Color.parseColor("#E56E27"));
            }
        }
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        // TODO Auto-generated method stub
        super.onActivityResult(requestCode, resultCode, data);
        // Toast.makeText(context, "Parent 2", Toast.LENGTH_SHORT).show();

        List<Fragment> fragments = getChildFragmentManager().getFragments();
        if (fragments != null) {
            for (Fragment fragment : fragments) {
                fragment.onActivityResult(requestCode, resultCode, data);
            }
        }

    }
}
