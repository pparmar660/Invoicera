package com.invoicera.BackgroundServices;

import android.app.Service;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.IBinder;
import android.support.annotation.Nullable;

import com.invoicera.Database.DatabaseHelper;
import com.invoicera.GlobalData.Constant;
import com.invoicera.GlobalData.Preferences;
import com.invoicera.InterFace.WebApiResult;
import com.invoicera.Webservices.WebRequest;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Created by vinove on 10/7/15.
 */
public class SendDataToServer extends Service implements WebApiResult {


    DatabaseHelper db;
    ContentValues values;
    String selectQuery;
    Cursor cursor;
    WebRequest sendInvoice;
    Preferences pref;


    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }


    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {


        if (isNetworkAvailable()) {
            JSONObject CreateInvoiceMainObj = new JSONObject();
            JSONArray CreateInvoiceArray = new JSONArray();
            db = new DatabaseHelper(this);
            pref=new Preferences(this);
            Constant.token=pref.getString("MyToken");

            selectQuery = "Select " + DatabaseHelper.JSON_DATA
                    + " From " + DatabaseHelper.Table_InvoiceCreateRequest+ " WHERE "+DatabaseHelper.TYPE+"='"+Constant.KEY_CREATE+"'";

            cursor = db.getRecords(selectQuery);
            JSONObject object = null;
            if (cursor.moveToFirst() && cursor.getCount() > 0)
                for (int i = 0; i < cursor.getCount(); i++) {

                    try {
                        object = new JSONObject(cursor.getString(cursor.getColumnIndex(DatabaseHelper.JSON_DATA)));
                        CreateInvoiceArray.put(0, object);


                    } catch (JSONException e) {
                        e.printStackTrace();
                    }


                }


            try {
                CreateInvoiceMainObj.put("createInvoice", CreateInvoiceArray);
            } catch (JSONException e) {
                e.printStackTrace();
            }


            sendInvoice = new WebRequest(this, CreateInvoiceMainObj, Constant.invoicelistURL, Constant.SERVICE_TYPE.CREATE_INVOICE,Constant.token, this, false);
            sendInvoice.execute();


        }


        return super.onStartCommand(intent, flags, startId);
    }

    @Override
    public void getWebResult(Constant.SERVICE_TYPE type, JSONObject result) {

        switch (type) {
            case CREATE_INVOICE:
                db.ClearTable(DatabaseHelper.Table_InvoiceCreateRequest);
                break;


        }

    }

    public boolean isNetworkAvailable() {
        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo networkInfo = cm.getActiveNetworkInfo();
        if (networkInfo != null && networkInfo.isConnected()) {
            return true;
        }
        return false;
    }
}
